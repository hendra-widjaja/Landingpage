$spaceamounts: (
  10,
  15,
  20,
  25,
  30,
  35,
  40,
  45,
  50,
  75,
  100
); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    //.m#{str-slice($side, 0, 1)}-#{$space} {
    //  margin-#{$side}: #{$space}rem;
    //}

    //.p#{str-slice($side, 0, 1)}-#{$space} {
    //  padding-#{$side}: #{$space}rem;
    //}
  }
}

$sizes: 4;

@mixin spacing-classes($property: margin) {
  $abbrev: if($property == margin, "m", "p");

  @for $i from 1 through $sizes {
    $spacing: $i * 0.25rem;
    .#{$abbrev}-#{$i} {
      #{$property}: $spacing;
    }
    .#{$abbrev}l-#{$i},
    .#{$abbrev}x-#{$i} {
      #{$property}-left: $spacing;
    }
    .#{$abbrev}r-#{$i},
    .#{$abbrev}x-#{$i} {
      #{$property}-right: $spacing;
    }
    .#{$abbrev}t-#{$i} {
      #{$property}-top: $spacing;
    }
    .#{$abbrev}b-#{$i} {
      #{$property}-bottom: $spacing;
    }
    .#{$abbrev}y-#{$i} {
      #{$property}-top: $spacing;
      #{$property}-bottom: $spacing;
    }
  }
}

// Include the mixin twice to generate both sets of classes
@include spacing-classes(margin);
@include spacing-classes(padding);
